{"version":3,"sources":["src/app/pages/infinite-scroll/infinite-scroll.page.html","src/app/pages/infinite-scroll/infinite-scroll-routing.module.ts","src/app/pages/infinite-scroll/infinite-scroll.module.ts","src/app/pages/infinite-scroll/infinite-scroll.page.scss","src/app/pages/infinite-scroll/infinite-scroll.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,8uBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,QAAM,MAAM,GAAW,CACrB;AACE,MAAA,IAAI,EAAE,EADR;AAEE,MAAA,SAAS,EAAE,kDAAA,CAAA,oBAAA;AAFb,KADqB,CAAvB;;AAWA,QAAa,+BAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,+BAA+B,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJ3C,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAA,CAAa,QAAb,CAAsB,MAAtB,CAAD,CADD;AAER,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAD;AAFD,KAAT,CAI2C,CAAA,EAA/B,+BAA+B,CAA/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKb,QAAa,wBAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,wBAAwB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAVpC,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CACP,4CAAA,CAAA,cAAA,CADO,EAEP,2CAAA,CAAA,aAAA,CAFO,EAGP,2CAAA,CAAA,aAAA,CAHO,EAIP,4DAAA,CAAA,iCAAA,CAJO,EAKP,0DAAA,CAAA,kBAAA,CALO,CADD;AAQR,MAAA,YAAY,EAAE,CAAC,kDAAA,CAAA,oBAAA,CAAD;AARN,KAAT,CAUoC,CAAA,EAAxB,wBAAwB,CAAxB;;;;;;;;;;;;;;;;ACrBb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,qNAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACQf,QAAa,kBAAb;AAKE,oCAAA;AAAA;;AAFA,aAAA,IAAA,GAAO,IAAI,KAAJ,CAAU,EAAV,CAAP;AAEiB;;AALnB;AAAA;AAAA,mCAOU,CACP;AARH;AAAA;AAAA,0CAUiB,CAAM;AAVvB;AAAA;AAAA,yCAYmB,MAZnB,EAYyB;AAAA;;AACrB,UAAA,OAAO,CAAC,GAAR,CAAY,MAAZ;AAEA,UAAA,UAAU,CAAC,YAAK;AAAA;;AAEd,gBAAI,KAAI,CAAC,IAAL,CAAU,MAAV,GAAmB,EAAvB,EAA2B;AACzB,cAAA,MAAM,CAAC,MAAP,CAAc,QAAd;AACA,cAAA,KAAI,CAAC,cAAL,CAAoB,QAApB,GAA+B,IAA/B;AACA;AACD;;AACD,gBAAM,QAAQ,GAAG,IAAI,KAAJ,CAAU,EAAV,CAAjB;;AACA,0BAAA,KAAI,CAAC,IAAL,EAAU,IAAV,mBAAkB,QAAlB,EARc,CAUd;;;AACA,YAAA,MAAM,CAAC,MAAP,CAAc,QAAd;AAED,WAbS,EAaP,IAbO,CAAV;AAcD;AA7BH;;AAAA;AAAA,OAAA;;AACmD,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAhD,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU,2CAAA,CAAA,mBAAA,CAAV,EAA6B;AAAE,gBAAQ;AAAV,KAA7B,CAAgD,E,gEAAgB,2CAAA,CAAA,mBAAA,C,CAAhB,CAAA,E,4BAAA,E,gBAAA,E,KAAkC,CAAlC;AADtC,IAAA,kBAAkB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL9B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,qBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,uGAAA,CAAA,YAFS;;;;AAAA,KAAV,CAK8B,E,yEAAA,CAAA,EAAlB,kBAAkB,CAAlB","sourcesContent":["export default \"<app-header titulo='Infinite-Scroll'></app-header>\\n\\n<ion-content>\\n\\n  <ion-list>\\n    <ion-item *ngFor='let item of data; let i = index'>\\n      <ion-label>\\n        Item: {{i+1}}\\n      </ion-label>\\n    </ion-item>\\n  </ion-list>\\n\\n  <!-- threshold es lo cerca del fin de la página cuando se hará la petición para traer los siguientes elementos -->\\n  <!-- cargarSiguiente se lanzará cuando el usuario llegue a 100px del final -->\\n  <!-- spinner se utilizará para  -->\\n  <ion-infinite-scroll threshold=\\\"150px\\\" (ionInfinite)=\\\"cargarSiguientes($event)\\\">\\n    <ion-infinite-scroll-content\\n      loadingSpinner=\\\"crescent\\\"\\n      loadingText=\\\"Cargando...\\\">\\n    </ion-infinite-scroll-content>\\n  </ion-infinite-scroll>\\n\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { InfiniteScrollPage } from './infinite-scroll.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: InfiniteScrollPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class InfiniteScrollPageRoutingModule {}\n","import { ComponentsModule } from './../../components/components.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { InfiniteScrollPageRoutingModule } from './infinite-scroll-routing.module';\n\nimport { InfiniteScrollPage } from './infinite-scroll.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    InfiniteScrollPageRoutingModule,\n    ComponentsModule\n  ],\n  declarations: [InfiniteScrollPage]\n})\nexport class InfiniteScrollPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2luZmluaXRlLXNjcm9sbC9pbmZpbml0ZS1zY3JvbGwucGFnZS5zY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { IonInfiniteScroll } from '@ionic/angular';\n\n@Component({\n  selector: 'app-infinite-scroll',\n  templateUrl: './infinite-scroll.page.html',\n  styleUrls: ['./infinite-scroll.page.scss'],\n})\nexport class InfiniteScrollPage implements OnInit {\n  @ViewChild(IonInfiniteScroll, { static: false }) infiniteScroll: IonInfiniteScroll;\n\n  data = new Array(20);\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() { }\n\n  cargarSiguientes(evento) {\n    console.log(evento);\n\n    setTimeout(() => {\n\n      if (this.data.length > 50) {\n        evento.target.complete();\n        this.infiniteScroll.disabled = true;\n        return;\n      }\n      const nuevoArr = new Array(20);\n      this.data.push(...nuevoArr);\n\n      // Para cancelar el evento de cargar siguientes\n      evento.target.complete();\n\n    }, 1000);\n  }\n}\n"],"sourceRoot":"webpack:///","file":"infinite-scroll-infinite-scroll-module-es5.js"}